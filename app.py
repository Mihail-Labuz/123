import streamlit as st
import pandas as pd
import joblib

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="PhishShield PRO",
    page_icon="üõ°Ô∏è",
    layout="centered",
    initial_sidebar_state="expanded"
)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
st.markdown("""
<style>
    .header-style {
        font-size: 24px;
        font-weight: bold;
        color: #2e86c1;
    }
    .metric-value {
        font-size: 28px !important;
        font-weight: bold !important;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
@st.cache_resource
def load_model():
    try:
        model_data = joblib.load('phishing_model.pkl')
        return model_data['model'], model_data['scaler'], model_data['feature_names']
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {str(e)}")
        st.stop()

model, scaler, features = load_model()

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<p class="header-style">PhishShield PRO</p>', unsafe_allow_html=True)
st.caption("–î–µ—Ç–µ–∫—Ç–æ—Ä —Ñ–∏—à–∏–Ω–≥–æ–≤—ã—Ö –ø–∏—Å–µ–º —Å –ø–æ—Ä–æ–≥–æ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è 30%")

# –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
with st.form("phish_form"):
    st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∏—Å—å–º–∞")
    
    input_values = {}
    cols = st.columns(2)
    
    with cols[0]:
        input_values['num_words'] = st.number_input("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤", min_value=0, value=120)
        input_values['num_unique_words'] = st.number_input("–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞", min_value=0, value=80)
        input_values['num_stopwords'] = st.number_input("–°—Ç–æ–ø-—Å–ª–æ–≤–∞", min_value=0, value=30)
        input_values['num_links'] = st.number_input("–°—Å—ã–ª–∫–∏", min_value=0, value=2)
    
    with cols[1]:
        input_values['num_unique_domains'] = st.number_input("–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã", min_value=0, value=1)
        input_values['num_email_addresses'] = st.number_input("Email –∞–¥—Ä–µ—Å–∞", min_value=0, value=1)
        input_values['num_spelling_errors'] = st.number_input("–û—à–∏–±–∫–∏", min_value=0, value=3)
        input_values['num_urgent_keywords'] = st.number_input("–°—Ä–æ—á–Ω–æ—Å—Ç—å", min_value=0, value=5)
    
    submitted = st.form_submit_button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", type="primary")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if submitted:
    try:
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        input_df = pd.DataFrame([input_values], columns=features)
        scaled_data = scaler.transform(input_df)
        phishing_prob = model.predict_proba(scaled_data)[0][1]
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∏—Å–∫–∞
        threshold = 0.3
        risk_level = "–í—ã—Å–æ–∫–∏–π" if phishing_prob >= threshold else "–ù–∏–∑–∫–∏–π"
        risk_color = "#e74c3c" if phishing_prob >= threshold else "#2ecc71"
        
        col1, col2 = st.columns([3, 1])
        with col1:
            st.markdown(f"""
            <div style="margin-bottom: 1rem;">
                <div style="font-size: 16px; color: #7f8c8d;">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ñ–∏—à–∏–Ω–≥–∞</div>
                <div class="metric-value" style="color: {risk_color};">{phishing_prob*100:.1f}%</div>
                <div style="font-size: 14px; color: #7f8c8d;">–ü–æ—Ä–æ–≥: {threshold*100:.0f}%</div>
                <div style="font-size: 14px; color: {risk_color}; font-weight: bold;">{risk_level} —Ä–∏—Å–∫</div>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            st.progress(float(phishing_prob))

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
    st.info("""
    **PhishShield PRO** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
    –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–∏—Å–µ–º –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ñ–∏—à–∏–Ω–≥–∞.
    –ü–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è: 30% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏.
    """)
    
    st.markdown("---")
    st.write("**üìå –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**")
    st.write("1. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∏—Å—å–º–∞")
    st.write("2. –ù–∞–∂–º–∏—Ç–µ '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å'")
    st.write("3. –ò–∑—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
    
    st.markdown("---")
    st.write("**üîç –¢–∏–ø–∏—á–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ñ–∏—à–∏–Ω–≥–∞:**")
    st.write("- –°—Ä–æ—á–Ω—ã–µ –ø—Ä–æ—Å—å–±—ã –∏–ª–∏ —É–≥—Ä–æ–∑—ã")
    st.write("- –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏/–≤–ª–æ–∂–µ–Ω–∏—è")
    st.write("- –û—à–∏–±–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ –ø–∏—Å—å–º–∞")
    st.write("- –ù–µ–∑–Ω–∞–∫–æ–º—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–∏")
    st.write("- –ó–∞–ø—Ä–æ—Å –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")